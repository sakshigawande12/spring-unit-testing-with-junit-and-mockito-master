# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ manual-trigger-using-github-actions ]
  pull_request:
    branches: [ master ]
  repository_dispatch:
    types: [trigger-workflow-1]
  
jobs:
  job1:
    name: build
    runs-on: ubuntu-latest

    outputs:
      output1: ${{ steps.step1.outputs.auth_header }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - id: step1
        shell: bash
        run: |
            echo "::set-output name=auth_header::$(git log --format=%B -n 1 ${{ github.event.after }})"

      - name: Validate code
        run: mvn validate

      - name: Compile
        run: mvn clean compile

      - name: Testing
        run: mvn test

      - name: Create artifact
        run: mvn -B package --file pom.xml
        
      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: sakshigawande12/app:latest

      - name: Trigger next workflow
        if: success()
        run: |
          curl -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u ${{ secrets.ACCESS_TOKEN }} \
          --data '{"event_type": "trigger-workflow-2", "client_payload": {"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}}'

#      - name: GITHUB CONTEXT
#        env:
#          GITHUB_CONTEXT: ${{ toJson(github) }}
#        run: echo "$GITHUB_CONTEXT"
#
#      - name: get commit message
#        run: |
#             echo ::set -env name=COMMIT_MSG::$(git log --format=%B -n 1 ${{ github.event.after }})
#
#      - name: show commit message
#        run: echo $COMMIT_MSG

     # - name: step1
      #  if: my_env_var == 'try'
       # run: echo hello

     # - name: Set up Docker Buildx
      #  uses: docker/setup-buildx-action@v1

      #- name: Login to DockerHub
       # uses: docker/login-action@v1
        #with:
         # username: ${{ secrets.DOCKERHUB_USERNAME }}
          #password: ${{ secrets.DOCKERHUB_PASSWORD }}

      #- name: Build Docker image
       # run: docker build --file Dockerfile --tag sakshigawande12/maven-app:$GITHUB_RUN_NUMBER .

      #- name: push Docker image
       # run: docker push  sakshigawande12/maven-app:$GITHUB_RUN_NUMBER

      #- name: Read Docker Image Identifiers
       # run: echo ::set -env name=IMAGE_REPOSITORY::$(echo $GITHUB_RUN_NUMBER)

      #- name: print tag
       # run: echo ${{env.IMAGE_REPOSITORY}}

      #- name: Build and push docker image
       # uses: docker/build-push-action@v1
        #with:
         # path: .
          #dockerfile: ./Dockerfile
          #push: true
          #registry: sakshigawande12
          #repository: maven-app
          #tags: ${{env.IMAGE_REPOSITORY}}

      #- name: Run Snyk to check for vulnerabilities
       # uses: snyk/actions/maven@master
        #continue-on-error: true
        #env:
         # SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        #with:
         # command: monitor

      #- name: Run Snyk to check Docker image for vulnerabilities
       # continue-on-error: true
        #uses: snyk/actions/docker@master
        #env:
         # SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        #with:
         # image: sakshigawande12/maven-app:$GITHUB_RUN_NUMBER
          #args: --file=Dockerfile
          
#  job2:
#    name: ping-pong
#    needs: job1
#    runs-on: ubuntu-latest
#    steps:
#      - name: PING - Dispatch initiating repository event
#        if: github.event.action != 'pong'
#        run: |
#          curl -X POST https://api.github.com/repos/sakshigawande12/HelloWorld/dispatches \
#          -H 'Accept: application/vnd.github.everest-preview+json' \
#          -u ${{ secrets.ACCESS_TOKEN }} \
#          --data '{"event_type": "ping", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'" }}'
#      - name: ACK - Acknowledge pong from remote repository
#        if: github.event.action == 'pong'
#        run: |
#          echo "PONG received from '${{ github.event.client_payload.repository }}'" && \
#          curl -X POST https://api.github.com/repos/sakshigawande12/HelloWorld/dispatches \
#          -H 'Accept: application/vnd.github.everest-preview+json' \
#          -u ${{ secrets.ACCESS_TOKEN }} \
#          --data '{"event_type": "ack", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'" }}'


