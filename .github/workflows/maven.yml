# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
#   push:
#     branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 12 * * *'
  repository_dispatch:
  
jobs:
  job1:
    name: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: sakshigawande12/app:latest
  job2:
    name: ping-pong
    needs: job1
    runs-on: ubuntu-latest
    steps:
      - name: PING - Dispatch initiating repository event
        if: github.event.action != 'pong'
        run: |
          curl -X POST https://api.github.com/repos/sakshigawande12/HelloWorld/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u ${{ secrets.ACCESS_TOKEN }} \
          --data '{"event_type": "ping", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'" }}'
      - name: ACK - Acknowledge pong from remote repository
        if: github.event.action == 'pong'
        run: |
          echo "PONG received from '${{ github.event.client_payload.repository }}'" && \
          curl -X POST https://api.github.com/repos/sakshigawande12/HelloWorld/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u ${{ secrets.ACCESS_TOKEN }} \
          --data '{"event_type": "ack", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'" }}'

