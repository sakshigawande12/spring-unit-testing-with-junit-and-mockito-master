# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ github-action-for-docker-and-schedule-event ]
  pull_request:
    branches: [ github-action-for-docker-and-schedule-event ]
  schedule:
    - cron: '0 12 * * *'
  repository_dispatch:

jobs:
  job1:
    name: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Validate code
        run: mvn validate

      - name: Compile
        run: mvn clean compile

      - name: Testing
        run: mvn test

      - name: Create artifact
        run: mvn -B package --file pom.xml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: sakshigawande12/maven-app:${GITHUB_RUN_NUMBER}

  job3:
    name: sonarcloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        run: mvn sonar:sonar -Dsonar.projectKey=sakshigawande12_spring-unit-testing-with-junit-and-mockito-master -Dsonar.organization=sakshigawande12 -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
