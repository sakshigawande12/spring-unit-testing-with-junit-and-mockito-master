# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ manual-trigger-using-github-actions ]
  pull_request:
    branches: [ manual-trigger-using-github-actions ]
  workflow_dispatch:

jobs:
  job1:
    name: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Hello world
        run: echo $GITHUB_RUN_NUMBER

      - name: print env
        env:
          my_env_var: ${{git log --format=%B -n 1 ${{ github.event.after }}}}
        run: echo $my_env_var


      - name: Validate code
        run: mvn validate

      - name: Compile
        run: mvn clean compile

      - name: Testing
        run: mvn test

      - name: Create artifact
        run: mvn -B package --file pom.xml

      - name: GITHUB CONTEXT
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: get commit message
        run: |
             echo ::set -env name=commitmsg::$(git log --format=%B -n 1 ${{ github.event.after }})

      - name: show commit message
        run: echo "$commitmsg"

      - name: step1
        if: my_env_var == 'try'
        run: echo hello

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker image
        run: docker build --file Dockerfile --tag sakshigawande12/maven-app:$GITHUB_RUN_NUMBER .

      - name: push Docker image
        run: docker push  sakshigawande12/maven-app:$GITHUB_RUN_NUMBER

      - name: Read Docker Image Identifiers
        run: echo ::set -env name=IMAGE_REPOSITORY::$(echo $GITHUB_RUN_NUMBER)

      - name: print tag
        run: echo ${{env.IMAGE_REPOSITORY}}

      - name: Build and push docker image
        uses: docker/build-push-action@v1
        with:
          path: .
          dockerfile: ./Dockerfile
          push: true
          registry: sakshigawande12
          repository: maven-app
          tags: ${{env.IMAGE_REPOSITORY}}

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor

      - name: Run Snyk to check Docker image for vulnerabilities
          # Snyk can be used to break the build when it detects vulnerabilities.
          # In this case we want to upload the issues to GitHub Code Scanning
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
            # In order to use the Snyk Action you will need to have a Snyk API token.
            # More details in https://github.com/snyk/actions#getting-your-snyk-token
            # or you can signup for free at https://snyk.co/SignUpGH
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: sakshigawande12/maven-app:$GITHUB_RUN_NUMBER
          args: --file=Dockerfile

